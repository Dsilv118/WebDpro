2022.12.13 요점정리

12. API-I

● API 
JDK 라이브러리(자바 표준 라이브러리)에 대하여
지금까지 무심코 사용해 왔던 String클래스와 System클래스도 모두 이 라이브러리에 속한 클래스입니다.
이 라이브러리는 JDK안에 포함되어 있는데 자바 가상기계가 자바 프로그램을 실행할 때 
이 라이브러리의 클래스와 인터페이스들을 자동으로 읽어 들이기 때문에 우리가 지금까지 그 존재를
인식하지 않고도 사용할 수 있었던 겁니다.

※ JDK에서 많은 패키지 제공
* java.lang  : 자바프로그램의 기본적인 기능을 제공. 명시적으로 지정하지 않아도 모든 자바프로그램에
                포함되는 패키지.
* java.util   : 유용한 유틸리티 클래스를 제공.
* java.io     : 입출력 기능을 제공하는 패키지.
* java.awt   : 그래픽 유저인터페이스(GUI)를 구축하기 위한 다양한 컴포넌트를 제공하는 패키지.
* java.awt.event : awt 컴포넌트들의 이벤트를 제어하는 패키지.

● String (문자열에 관련된 대표적 클래스) 

◎ String의 이해

※ String은 객체 자료형입니다. 우리가 문자열을 사용하면서 아래와 같이 사용하였습니다.     
             
               String str = "Hello World~~" ;  

   String은 분명 대문자로 시작하므로, 기초데이터가 아닌 객체 데이터입니다. 하지만 뒤에 
   생성자를 사용하지 않고 기초데이터를 만들 때처럼 초기화 하고 있습니다.     

                int i = 10 ; 

   String의 경우만 특이하게 객체데이터지만, 기초데이터처럼 사용할 수 있게 하였습니다. 
   원래는 아래처럼 사용하였어야 했겠죠. 
  
                String string = new String("Hello World~~") ;
   
    두 경우 모두 사용할 수 있습니다. 

                String string = "Hello World" ; 
                String string = new String("Hello World") ;

◎ String의 문제점

※ String은 메모리를 과소비 합니다. 
String 클래스는 많이 쓰이고, 좋은 기능(메소드)를 많이 가지고 있습니다. 이렇게 좋은 클래스가 
치명적인 단점이 있습니다. 바로 메모리를 과소비 하는 것입니다. String 객체의 경우 처음 초기화된 
데이터에 변화가 생기면 기존 것을 재활용하지 않고 기존의 것은 버리고 새로운 메모리를 이용합니다.
