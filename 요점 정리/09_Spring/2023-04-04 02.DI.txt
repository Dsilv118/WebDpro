2023.04.04 요점정리

02. DI
DI란?
스프링을 이용한 객체 생성과 조립(스프링은 객체 생성과 조립을 하는 컨테이너라 볼 수 있다)

◎ 스프링 컨테이너
AbstractApplicationContext 추상클래스 위로는 ApplicationContext 인터페이스 밑으로 상속받는
얘들중의 하나가 GenericXmlApplicationContext이다. 매개변수로 위치를 주면 IOC 컨테이너가 생성.
즉 부품이 된 것이다. 

○ 의존 관계
* DI는 Dependency Injection의 약자로 우리말로 하면 '의존하는 객체를 주입하는 것'입니다.
* 의존주입은 setter를 통한 주입과 생성자를 통한 주입이 있습니다.
* xml파일을 이용한 의존주입(아래의 예제는 studentInfo 객체는 student 객체에 의존하고 있다)

◎ DI 사용에 따른 장점
* interface를 만들므로 타입을 통일시킬 수 있고, 강제로 오버라이드하게해서 작업을 통일시킬 수 있다는
  여러가지 장점이 있다. 
* 프로젝트의 규모가 커지면, 추후 유지보수 업무가 발생시에 DI를 이용해 더욱 효율적으로 관리할 수 있다.


