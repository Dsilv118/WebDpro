2022.12.16 요점정리

15. Exception

● Exception
예외란?
문제 없을 것 같은 프로그램도 외부환경요인 등에 의해서 문제가 발생하곤 합니다. 프로그램에서 
문제가 발생될 만한 곳을 예상하여 사전에 "문제가 발생하면 이렇게 해라"라고 프로그래밍 하는 것을 
예외 처리라고 합니다.

◎ 예외처리의 필요성
어느 한 부분에서 예외가 발생하더라도 계속해서 프로그램이 동작되도록 하는 목적이 있습니다. 
어떤 문제가 하나 발생되었다고 그 프로세스가 완전히 정지되어 시스템을 재가동하기 전까지는 구동을
아예 못한다고 한다면 너무 많은 손실이 클 것입니다. 그래서 사소한 문제 같은 경우에는 그 문제를 
우회해서 가는 방법으로 프로세스가 죽지 않고 계속 구동하도록 프로그래밍하는 방법이 필요합니다.

◎ 일반적으로 많이 보게 되는 예외들
예외(Exception)의 종류는 아주 많습니다. Exception클래스는 많은 예외들(자식클래스)를 가지고 
있습니다. 프로그래밍을 하다 보면, 자주 보게 되는 예외들이 있습니다.

* ArrayIndexOutOfBoundsException -> 배열을 사용시 존재하지 않는 index값을 호출하면 발생합니다.

* NullPointerException -> 존재하지 않는 객체를 가리킬 때 발생합니다.

* NumberFormatException -> 숫자로 변경할 수 없는 문자열을 변경하려고 합니다.

※ 예외처리는 보험입니다.
예외가 발생 했을 때 프로세스가 죽지 않게 예외처리를 자체적으로 처리할 수도 있고, 
내가 처리 안하고 나를 부른데서 알아서 할테니 던져 버릴 수도 있습니다.