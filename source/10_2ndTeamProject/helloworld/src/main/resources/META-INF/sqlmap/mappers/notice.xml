<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lec.helloworld.dao.NoticeDao">
	<resultMap type="Notice" id="NoticeResult">
		<result property="nno" column="nno"/>
		<result property="ntitle" column="ntitle"/>
		<result property="ncontent" column="ncontent"/>
		<result property="nrdate" column="nrdate"/>
		<result property="ntype" column="ntype"/>
		<result property="adid" column="adid"/>
		<result property="adname" column="adname"/>
		<result property="writer" column="writer"/>
		<result property="prewrite" column="prewrite"/>
		<result property="nextwrite" column="nextwrite"/>
	</resultMap>
	
	<!-- 공지사항 모든 리스트(새 글 순서) -->
	<select id="noticeList" parameterType="Notice" resultMap="NoticeResult">
		<if test="schItem == null or schItem == ''">
			SELECT N.*,
			    (SELECT ADNAME FROM ADMIN WHERE N.ADID = ADID)ADNAME
			    FROM (SELECT ROWNUM RN, B.*
			        FROM (SELECT * FROM NOTICE ORDER BY NNO DESC) B)N
			    WHERE RN BETWEEN #{startRow} AND #{endRow}
		</if>
		
		<!-- 검색  -->
		<if test="schItem == 'all'">
			SELECT N.*,
			    (SELECT ADNAME FROM ADMIN WHERE N.ADID = ADID)ADNAME
			    FROM (SELECT ROWNUM RN, B.*
			        FROM (SELECT * FROM NOTICE WHERE NTITLE LIKE '%'||#{schWord}||'%' OR 
			        NTYPE LIKE '%'||#{schWord}||'%' ORDER BY NNO DESC) B)N
				WHERE RN BETWEEN #{startRow} AND #{endRow}	
		</if>
		<if test="schItem == 'title'">
			SELECT N.*,
			    (SELECT ADNAME FROM ADMIN WHERE N.ADID = ADID)ADNAME
			    FROM (SELECT ROWNUM RN, B.*
			        FROM (SELECT * FROM NOTICE WHERE NTITLE LIKE '%'||#{schWord}||'%' ORDER BY NNO DESC) B)N
			    WHERE RN BETWEEN #{startRow} AND #{endRow}
		</if>
		<if test="schItem == 'ntype'">
			SELECT N.*,
			    (SELECT ADNAME FROM ADMIN WHERE N.ADID = ADID)ADNAME
			    FROM (SELECT ROWNUM RN, B.*
			        FROM (SELECT * FROM NOTICE WHERE NTYPE LIKE '%'||#{schWord}||'%' ORDER BY NNO DESC) B)N
			   WHERE RN BETWEEN #{startRow} AND #{endRow}
		</if>
	</select>
	
	<!-- main에 들어갈 Notice 목록 -->
	<select id="noticeMain" resultMap="NoticeResult">
		    SELECT N.*,
        		(SELECT ADNAME FROM ADMIN WHERE N.ADID = ADID)ADNAME
        		FROM (SELECT ROWNUM RN, B.*
            		FROM (SELECT * FROM NOTICE ORDER BY NRDATE DESC) B)N
        	WHERE RN BETWEEN #{startRow} AND #{endRow}
	</select>
	
	<!-- 공지사항 전체갯수 (페이징 용) -->
	<select id="totCntNotice" parameterType="Notice" resultType="int">
		<!-- 전체 글 갯수 -->
		<if test="schItem == null or schItem == ''">
			SELECT COUNT(*) FROM NOTICE
		</if>
		
		<!-- 검색 후 글 갯수 -->
		<if test="schItem == 'all'">
			SELECT COUNT(*) FROM NOTICE WHERE NTITLE LIKE '%'||#{schWord}||'%' OR NTYPE LIKE '%'||#{schWord}||'%'
		</if>
		<if test="schItem == 'title'">
			SELECT COUNT(*) FROM NOTICE WHERE NTITLE LIKE '%'||#{schWord}||'%'
		</if>
		<if test="schItem == 'ntype'">
			SELECT COUNT(*) FROM NOTICE WHERE NTYPE LIKE '%'||#{schWord}||'%'
		</if>
	</select>
	
	<!-- 공지사항 입력하기 -->
	<insert id="noticeWrite" parameterType="Notice">
		INSERT INTO NOTICE(NNO, NTITLE, NCONTENT, NTYPE, ADID)
    		VALUES(NOTICE_SEQ.NEXTVAL
    		, #{ntitle}
    		, #{ncontent}
    		, #{ntype}
    		, #{adid})
	</insert>
	
	<!-- 공지사항 상세보기 -->
	<select id="noticeContent" parameterType="int" resultType="Notice">
		SELECT N.*,
		    (SELECT ADNAME FROM ADMIN WHERE N.ADID = ADID)ADNAME
		    FROM (SELECT ROWNUM RN, B.*
		        FROM (SELECT * FROM NOTICE ORDER BY NNO DESC) B)N
		    WHERE NNO=#{nno}
	</select>
	
	<!-- 공지사항 수정하기 -->
	<update id="noticeModify" parameterType="Notice">
		UPDATE NOTICE 
			SET NTITLE = #{ntitle},
		        NCONTENT = #{ncontent},
		        NTYPE = #{ntype}
	    WHERE NNO = #{nno}
	</update>
	
	<!-- 공지사항 삭제하기 -->
	<delete id="noticeDelete" parameterType="int">
		DELETE FROM NOTICE WHERE NNO = #{nno}
	</delete>
	
	<!-- 이전 글 & 다음 글 -->	
	
	<select id="noticePre" parameterType="int" resultType="Notice">
		SELECT * 
		    FROM NOTICE 
		    WHERE NNO IN ((SELECT MAX(NNO) 
		                    FROM NOTICE 
		                   <![CDATA[ WHERE NNO < #{nno}]]> )
    )
	</select>
	
	<select id="noticeNext" parameterType="int" resultType="Notice">
		SELECT * 
		    FROM NOTICE 
		    WHERE NNO IN ((SELECT MIN(NNO) 
		                    FROM NOTICE 
		                  <![CDATA[ WHERE NNO > #{nno}]]> )
    )
	</select>
	
</mapper>